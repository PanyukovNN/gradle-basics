plugins {
    id 'java'
    id 'jacoco'
    id 'org.springframework.boot' version '2.4.3'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
}

group 'org.example'
version '1.0-SNAPSHOT'

sourceSets {
    test {
        java {
            srcDir 'src'
        }
    }
}

// Версия java
java.toolchain.languageVersion = JavaLanguageVersion.of(8);

bootJar {
    archiveVersion = ''
    mainClass = 'com.panyukovnn.gradlebasics.GradlebasicsApplication'
}

configurations {
    compileOnly.extendsFrom annotationProcessor
    testCompileOnly.extendsFrom annotaionProcessor
    testAnnotationProcessor.extendsFrom annotaionProcessor
    all*.exclude module : 'spring-boot-starter-logging' // fix logging issue
}

def springBootVersion = '2.4.3'

// Репозитории
repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    implementation "org.springframework.boot:spring-boot-starter-web:$springBootVersion"

    testImplementation("org.junit.jupiter:junit-jupiter-api:5.6.0")
    testImplementation("org.junit.jupiter:junit-jupiter-engine:5.6.0")
    testImplementation('org.junit.jupiter:junit-jupiter:5.6.0')
    testImplementation('org.springframework.boot:spring-boot-starter-test')

    testCompileOnly 'junit:junit:4.12'
    testRuntimeOnly 'org.junit.vintage:junit-vintage-engine:5.3.1'

    annotationProcessor "org.projectlombok:lombok:1.18.16"

    implementation gradleApi()

}

test {
    useJUnitPlatform()
}

// Кодировка
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

// Собственные таски
task helloWorld {
    doFirst {
        println 'Hello, ' + nameProperty + '!'
    }
}

/*
dependOn check
build.dependsOn helloWorld
*/

/*
task greetingTask(type: GreetingTask) {
    greetingName "ESA SPB"
}
*/

//test {
//    finalizedBy jacocoTestReport // report is always generated after tests run
//}
//jacocoTestReport {
//    dependsOn test // tests are required to run before generating the report
//}
