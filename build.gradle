plugins {
    id 'java'
    id 'jacoco'
    id 'org.springframework.boot' version '2.4.3'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'jacoco'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
}

//sourceSets {
//    test {
//        java {
//            srcDirs = ['src/test/java']
//        }
//    }
//}

sourceSets {
    main {
        java {
            srcDirs = ['src']
        }
    }

    test {
        java {
            srcDirs = ['src/test/java']
        }
    }
}

bootJar {
    archiveVersion = ''
    mainClass = 'com.panyukovnn.gradlebasics.GradlebasicsApplication'
}


allprojects {
    java.sourceCompatibility(JavaVersion.VERSION_1_8)

    group 'com.panyukovnn'
    version '1.0'

    configurations {
        compileOnly.extendsFrom annotationProcessor
        testCompileOnly.extendsFrom annotaionProcessor
        testAnnotationProcessor.extendsFrom annotaionProcessor
        all*.exclude module: 'spring-boot-starter-logging' // fix logging issue
    }

    repositories {
        mavenLocal()
        mavenCentral()
    }

    def springBootVersion = '2.4.3'

    dependencies {
        implementation "org.springframework.boot:spring-boot-starter-web:$springBootVersion"

        testImplementation("org.junit.jupiter:junit-jupiter-api:5.6.0")
        testImplementation("org.junit.jupiter:junit-jupiter-engine:5.6.0")
        testImplementation('org.springframework.boot:spring-boot-starter-test')

        annotationProcessor "org.projectlombok:lombok:1.18.16"

        implementation gradleApi()
    }
}

test {
    useJUnitPlatform()
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

test {
    finalizedBy jacocoTestReport // report is always generated after tests run
}
jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
}
